//nolint:lll // styles are too long and can not be split
package drawio

import (
	"fmt"
	"reflect"
)

const (
	niImage           = "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+CjxkZWZzPgo8c3R5bGU+LmNscy0xe2ZpbGw6I2VlNTM5Njt9LmNscy0ye2ZpbGw6bm9uZTt9LmNscy0ze2ZpbGw6I2ZmZjt9PC9zdHlsZT4KPC9kZWZzPg0KPHJlY3QgY2xhc3M9ImNscy0xIiB4PSIwLjUiIHk9IjAuNSIgd2lkdGg9IjQ4IiBoZWlnaHQ9IjQ4Ii8+CjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMTQuNSIgeT0iMTQuNSIgd2lkdGg9IjIwIiBoZWlnaHQ9IjIwIi8+DQo8dGV4dCBmb250LXNpemU9IjMwIiBmaWxsPSJ3aGl0ZSIgeD0iOCIgeT0iMzUiPk5JPC90ZXh0Pgo8L3N2Zz4="
	vsiImage          = "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxOTgwMzg7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOm5vbmU7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjUiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIvPjxjaXJjbGUgY2xhc3M9ImNscy0yIiBjeD0iMTguODgiIGN5PSIyOC44OCIgcj0iMC42MyIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMTUuNzUiIHk9IjE4LjI1IiB3aWR0aD0iMi41IiBoZWlnaHQ9IjEuMjUiLz48cmVjdCBjbGFzcz0iY2xzLTIiIHg9IjE5LjUiIHk9IjE4LjI1IiB3aWR0aD0iMi41IiBoZWlnaHQ9IjEuMjUiLz48cmVjdCBjbGFzcz0iY2xzLTIiIHg9IjIzLjI1IiB5PSIxOC4yNSIgd2lkdGg9IjIuNSIgaGVpZ2h0PSIxLjI1Ii8+PHJlY3QgY2xhc3M9ImNscy0yIiB4PSIyNyIgeT0iMTguMjUiIHdpZHRoPSIyLjUiIGhlaWdodD0iMS4yNSIvPjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMzAuNzUiIHk9IjE4LjI1IiB3aWR0aD0iMi41IiBoZWlnaHQ9IjEuMjUiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0zMiwzMkgxN2ExLjI1LDEuMjUsMCwwLDEtMS4yNS0xLjI1VjI3QTEuMjUsMS4yNSwwLDAsMSwxNywyNS43NUgzMkExLjI1LDEuMjUsMCwwLDEsMzMuMjUsMjd2My43NUExLjI1LDEuMjUsMCwwLDEsMzIsMzJaTTE3LDI3djMuNzVIMzJWMjdaIi8+PHJlY3QgY2xhc3M9ImNscy0zIiB4PSIxNC41IiB5PSIxNC41IiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiLz48cmVjdCBjbGFzcz0iY2xzLTIiIHg9IjE1Ljc1IiB5PSIyMiIgd2lkdGg9IjE3LjUiIGhlaWdodD0iMS4yNSIvPjwvc3ZnPg=="
	resIPImage        = "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+CjxkZWZzPgo8c3R5bGU+LmNscy0xe2ZpbGw6I2VlNTM5Njt9LmNscy0ye2ZpbGw6bm9uZTt9LmNscy0ze2ZpbGw6I2ZmZjt9PC9zdHlsZT4KPC9kZWZzPg0KPHJlY3QgY2xhc3M9ImNscy0xIiB4PSIwLjUiIHk9IjAuNSIgd2lkdGg9IjQ4IiBoZWlnaHQ9IjQ4Ii8+CjxyZWN0IGNsYXNzPSJjbHMtMiIgeD0iMTQuNSIgeT0iMTQuNSIgd2lkdGg9IjIwIiBoZWlnaHQ9IjIwIi8+DQo8dGV4dCBmb250LXNpemU9IjIwIiBmaWxsPSJ3aGl0ZSIgeD0iNSIgeT0iMzIiPnJlc0lQPC90ZXh0Pgo8L3N2Zz4="
	vpeImage          = "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxMTkyZTg7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOm5vbmU7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjUiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIvPjxwYXRoIGlkPSJ2cGNfZ3JhZGllbnRfYm90dG9tIiBkYXRhLW5hbWU9InZwYyBncmFkaWVudCBib3R0b20iIGNsYXNzPSJjbHMtMiIgZD0iTTI3LDMxLjM4SDE4Ljg4YTEuMjcsMS4yNywwLDAsMS0xLjI2LTEuMjVWMjJoMS4yNnY4LjEzSDI3WiIvPjxwYXRoIGlkPSJ2cGNfZ3JhZGllbnRfdG9wIiBkYXRhLW5hbWU9InZwYyBncmFkaWVudCB0b3AiIGNsYXNzPSJjbHMtMiIgZD0iTTMwLjEyLDI3aDEuMjZWMTguODhhMS4yNiwxLjI2LDAsMCwwLTEuMjYtMS4yNUgyMnYxLjI1aDguMTJaIi8+PHBhdGggaWQ9ImVuZHBvaW50cyIgY2xhc3M9ImNscy0yIiBkPSJNMjkuMTIsMjguMjVsLTIuNS0yLjVBMi4yNiwyLjI2LDAsMCwwLDI3LDI0LjUsMi41MSwyLjUxLDAsMCwwLDI0LjUsMjJhMi4xOSwyLjE5LDAsMCwwLTEuMjUuMzhsLTIuNS0yLjVWMTUuNzVoLTV2NWg0LjEzbDIuNSwyLjVBMi4yNiwyLjI2LDAsMCwwLDIyLDI0LjUsMi41MSwyLjUxLDAsMCwwLDI0LjUsMjdhMi4yNiwyLjI2LDAsMCwwLDEuMjUtLjM4bDIuNSwyLjV2NC4xM2g1di01Wk0xOS41LDE5LjVIMTdWMTdoMi41Wm01LDYuMjVhMS4yNSwxLjI1LDAsMSwxLDEuMjUtMS4yNUExLjI1LDEuMjUsMCwwLDEsMjQuNSwyNS43NVpNMzIsMzJIMjkuNVYyOS41SDMyWiIvPjxyZWN0IGNsYXNzPSJjbHMtMyIgeD0iMTQuNSIgeT0iMTQuNSIgd2lkdGg9IjIwIiBoZWlnaHQ9IjIwIi8+PC9zdmc+"
	privateIPImage    = "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+DQo8ZGVmcz4NCjxzdHlsZT4uY2xzLTF7ZmlsbDojZWU1Mzk2O30uY2xzLTJ7ZmlsbDpub25lO30uY2xzLTN7ZmlsbDojZmZmO308L3N0eWxlPg0KPC9kZWZzPg0KPHJlY3QgY2xhc3M9ImNscy0xIiB4PSIwLjUiIHk9IjAuNSIgd2lkdGg9IjQ4IiBoZWlnaHQ9IjQ4Ii8+DQo8cmVjdCBjbGFzcz0iY2xzLTIiIHg9IjE0LjUiIHk9IjE0LjUiIHdpZHRoPSIyMCIgaGVpZ2h0PSIyMCIvPg0KPHRleHQgZm9udC1zaXplPSIxNSIgZmlsbD0id2hpdGUiIHg9IjE1IiB5PSIyMCI+TEI8L3RleHQ+DQo8dGV4dCBmb250LXNpemU9IjE1IiBmaWxsPSJ3aGl0ZSIgeD0iMTUiIHk9IjM2Ij5wSVA8L3RleHQ+DQo8L3N2Zz4="
	loadBalancerImage = "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxMTkyZTg7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOm5vbmU7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjUiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTMxLjg3LDIwLjc1YTYuMjUsNi4yNSwwLDAsMC0xMi4yNi4wOCw0LjY4LDQuNjgsMCwwLDAsLjgzLDkuMjloLjk0VjI4Ljg3aC0uOTRBMy40MywzLjQzLDAsMCwxLDIwLjIsMjJsLjUyLDAsLjA2LS41MmE1LDUsMCwwLDEsOS44MS0uNzFaIi8+PHJlY3QgY2xhc3M9ImNscy0zIiB4PSIxNC41IiB5PSIxNC41IiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0zMS4zNywyOS41YTEuODQsMS44NCwwLDAsMC0xLjIuNDVsLTIuNTYtMS41NGMwLS4wNSwwLS4xLDAtLjE2czAtLjExLDAtLjE2bDIuNTYtMS41NGExLjg2LDEuODYsMCwwLDAsMS4yLjQ1LDEuODgsMS44OCwwLDEsMC0xLjg3LTEuODgsMS40MiwxLjQyLDAsMCwwLDAsLjM2bC0yLjQ1LDEuNDZhMS44NiwxLjg2LDAsMCwwLTEuMzQtLjU3LDEuODgsMS44OCwwLDAsMCwwLDMuNzUsMS44NSwxLjg1LDAsMCwwLDEuMzQtLjU2TDI5LjU0LDMxYTEuNDUsMS40NSwwLDAsMCwwLC4zNSwxLjg4LDEuODgsMCwxLDAsMS44Ny0xLjg3Wm0wLTVhLjYzLjYzLDAsMSwxLS42Mi42MkEuNjMuNjMsMCwwLDEsMzEuMzcsMjQuNVptLTUuNjIsNC4zN2EuNjMuNjMsMCwwLDEtLjYzLS42Mi42NC42NCwwLDAsMSwuNjMtLjYzLjYzLjYzLDAsMCwxLC42Mi42M0EuNjIuNjIsMCwwLDEsMjUuNzUsMjguODdaTTMxLjM3LDMyYS42My42MywwLDEsMSwuNjMtLjYzQS42My42MywwLDAsMSwzMS4zNywzMloiLz48L3N2Zz4="
	fipImage          = "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxMTkyZTg7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOm5vbmU7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjkyIiB3aWR0aD0iNDgiIGhlaWdodD0iNDcuMTYiIHJ4PSI4Ii8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNMzAuMTIsMjEuNDNhMy4xMywzLjEzLDAsMCwwLTMuMDYsMi40NkgyMS45NGEzLjA3LDMuMDcsMCwxLDAsMCwxLjIyaDUuMTJhMy4xMiwzLjEyLDAsMSwwLDMuMDYtMy42OFptMCw0LjkxQTEuODQsMS44NCwwLDEsMSwzMiwyNC41LDEuODUsMS44NSwwLDAsMSwzMC4xMiwyNi4zNFoiLz48cmVjdCBjbGFzcz0iY2xzLTMiIHg9IjE0LjUiIHk9IjE0LjY3IiB3aWR0aD0iMjAiIGhlaWdodD0iMTkuNjUiLz48L3N2Zz4="

	ovalEndEdge  = "oval"
	arrowEndEdge = "block"
	noneEndEdge  = "none"
)

var images = map[reflect.Type]string{
	// squares tags images:
	reflect.TypeOf(PublicNetworkTreeNode{}): "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMjlweCIgaGVpZ2h0PSIyNnB4IiB2aWV3Qm94PSIwIDAgMjkgMjYiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDUzICg3MjUyMCkgLSBodHRwczovL3NrZXRjaGFwcC5jb20gLS0+CiAgICA8dGl0bGU+UHVibGljIE5ldHdvcmsgQmxhY2s8L3RpdGxlPgogICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+CiAgICA8ZyBpZD0iUGFnZS0xIiBzdHJva2U9Im5vbmUiIHN0cm9rZS13aWR0aD0iMSIgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj4KICAgICAgICA8ZyBpZD0iUHVibGljLU5ldHdvcmstQmxhY2siIHRyYW5zZm9ybT0idHJhbnNsYXRlKDAuOTAxMTA2LCAtMC4xNzQyMzMpIiBmaWxsPSIjMDAwMDAwIj4KICAgICAgICAgICAgPGcgaWQ9IkludGVybmV0IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMS44Njc1NTksIDEwLjExMTEyMykiPgogICAgICAgICAgICAgICAgPHBhdGggZD0iTTkuOTQwMzIwMTEsMTQuMjczNTIwNyBDMTAuOTEwMDkwMywxMi40MzQ5NjI3IDExLjQ0ODI4NzQsMTAuMzk5NTE3MSAxMS41MTQyOTI3LDguMzIxNzYwMzkgTDE0Ljg5OTE4MDEsOC4zMjE3NjAzOSBDMTQuNjU3MTYwNywxMS4xNDg3MDU1IDEyLjY3NzU2NTcsMTMuNTI0ODk2NCA5Ljk0MDMyMDExLDE0LjI3MzUyMDcgTDkuOTQwMzIwMTEsMTQuMjczNTIwNyBaIE0xLjM4NzgzODAzLDguMzIxNzYwMzkgTDQuNzcyNzI1NCw4LjMyMTc2MDM5IEM0LjgzMTk2MDkyLDEwLjM5NzgyNDYgNS4zNjIyNTk5NSwxMi40MzMyNzAzIDYuMzI0MTMyMTEsMTQuMjczNTIwNyBDMy41OTU5MTI4OSwxMy41MTY5OTg0IDEuNjI3MDM2NzMsMTEuMTQzMDY0IDEuMzg3ODM4MDMsOC4zMjE3NjAzOSBMMS4zODc4MzgwMyw4LjMyMTc2MDM5IFogTTYuNDA2NDk3NywxLjU1MTk4NTY1IEM1LjQwMTc1MDMsMy40NzA2NTI2NSA0Ljg0NjYyODc3LDUuNTkyOTc3MDMgNC43ODM0NDQyMSw3Ljc1NzYxMjUgTDEuMjU0MTM0OTgsNy43NTc2MTI1IEMxLjUwNjg3MzIzLDQuODA5OTM5NzUgMy41NzA1MjYyMywyLjMzMjc2NjM0IDYuNDI0NTUwNDMsMS41NTE5ODU2NSBMNi40MDY0OTc3LDEuNTUxOTg1NjUgWiBNNS44NzI4MTM3OSw3LjE5MzQ2NDYgQzUuOTI5MjI4NTgsNC45OTYxMDg1NSA2LjU3MTc5MzAzLDIuODUzNDc0ODUgNy43MzQ1MDE4NCwwLjk4NzgzNzc2IEM3Ljk4NjExMTgsMC45NTk2MzAzNjUgOC4yMzk0MTQyMSwwLjk1OTYzMDM2NSA4LjQ5MDQ2MDAyLDAuOTg3ODM3NzYgQzkuNjY1NTgwMDksMi44NTAwODk5NiAxMC4zMTk5OTE2LDQuOTkyNzIzNjcgMTAuMzg1OTk2OSw3LjE5MzQ2NDYgTDUuODcyODEzNzksNy4xOTM0NjQ2IFogTTguMTI5NDA1MzcsMTQuNTI3Mzg3MiBDOC4wMDM2MDAzOSwxNC41MzU4NDk1IDcuODc3MjMxMjYsMTQuNTM1ODQ5NSA3Ljc1MTQyNjI4LDE0LjUyNzM4NzIgQzYuNTgyNTExODQsMTIuNjYzNDQyNiA1LjkzNDMwNTkxLDEwLjUyMDgwODkgNS44NzI4MTM3OSw4LjMyMTc2MDM5IEwxMC4zODU5OTY5LDguMzIxNzYwMzkgQzEwLjMzMDE0NjMsMTAuNTE5NjgwNiA5LjY4NzAxNzcxLDEyLjY2MjMxNDMgOC41MjQzMDg5LDE0LjUyNzM4NzIgQzguMzkyODYyNDQsMTQuNTM2NDEzNiA4LjI2MDg1MTgzLDE0LjUzNjQxMzYgOC4xMjk0MDUzNywxNC41MjczODcyIEw4LjEyOTQwNTM3LDE0LjUyNzM4NzIgWiBNMTQuODk5MTgwMSw3LjE5MzQ2NDYgTDExLjUxNDI5MjcsNy4xOTM0NjQ2IEMxMS40NDgyODc0LDUuMTE1NzA3OTEgMTAuOTEwMDkwMywzLjA4MDI2MjMgOS45NDAzMjAxMSwxLjI0MTcwNDMxIEMxMi42Nzc1NjU3LDEuOTkwMzI4NTcgMTQuNjU3MTYwNyw0LjM2NjUxOTUgMTQuODk5MTgwMSw3LjE5MzQ2NDYgTDE0Ljg5OTE4MDEsNy4xOTM0NjQ2IFogTTguMTI5NDA1MzcsMC4xMzcxMDI3MzQgQzMuNzY3NDEzODUsMC4xMzcxMDI3MzQgMC4yMzEzMzQ4NDIsMy42NzMxODE3NCAwLjIzMTMzNDg0Miw4LjAzNTE3MzI2IEMwLjIzMTMzNDg0MiwxMi4zOTcxNjQ4IDMuNzY3NDEzODUsMTUuOTMzMjQzOCA4LjEyOTQwNTM3LDE1LjkzMzI0MzggQzEyLjQ5MTM5NjksMTUuOTMzMjQzOCAxNi4wMjc0NzU5LDEyLjM5NzE2NDggMTYuMDI3NDc1OSw4LjAzNTE3MzI2IEMxNi4wMjc0NzU5LDMuNjczMTgxNzQgMTIuNDkxMzk2OSwwLjEzNzEwMjczNCA4LjEyOTQwNTM3LDAuMTM3MTAyNzM0IEw4LjEyOTQwNTM3LDAuMTM3MTAyNzM0IFoiIGlkPSJGaWxsLTEiPjwvcGF0aD4KICAgICAgICAgICAgPC9nPgogICAgICAgICAgICA8ZyBpZD0iQ2xhc3NpYy1JbmZyYXN0cnVjdHVyZS1CbGFjay1Db3B5Ij4KICAgICAgICAgICAgICAgIDxnIGlkPSJHcm91cC02IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjAwMDAwMCwgMC45OTg0MDApIj4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTIuMDAwMDIxMiwyMi45OTgwNDIyIEw3LjczNzAyMTE4LDIyLjk5ODA0MjIgQzQuMTQ2MDIxMTgsMjIuOTk4MDQyMiAwLjg3OTAyMTE4MiwyMC41NzkwNDIyIDAuMTU5MDIxMTgyLDE3LjA2MTA0MjIgQy0wLjcxMjk3ODgxOCwxMi43OTQwNDIyIDIuMTAwMDIxMTgsOC44NTEwNDIyMiA2LjE3ODAyMTE4LDguMTIyMDQyMjIgQzcuMjE2MDIxMTgsMi42OTgwNDIyMiAxMi40NTUwMjEyLC0wLjg1Nzk1Nzc4MyAxNy44NzkwMjEyLDAuMTgwMDQyMjE3IEMyMi41OTEwMjEyLDEuMDgxMDQyMjIgMjUuOTk5MDIxMiw1LjIwMTA0MjIyIDI2LjAwMDAyMTIsOS45OTgwNDIyMiBMMjQuMDAwMDIxMiw5Ljk5ODA0MjIyIEMyNC4wMDEwMjEyLDUuMTAwMDQyMjIgMTkuNTk5MDIxMiwxLjIyOTA0MjIyIDE0LjUzNDAyMTIsMi4xMjgwNDIyMiBDMTAuOTk5MDIxMiwyLjc1NjA0MjIyIDguNDA2MDIxMTgsNS44MjYwNDIyMiA4LjAyMTAyMTE4LDkuMzk2MDQyMjIgTDcuOTU5MDIxMTgsOS45NjEwNDIyMiBMNy4zMTMwMjExOCwxMC4wMDUwNDIyIEM0Ljc0MDAyMTE4LDEwLjE3OTA0MjIgMi40NzcwMjExOCwxMi4wMjIwNDIyIDIuMDcwMDIxMTgsMTQuNTY5MDQyMiBDMS41MTIwMjExOCwxOC4wNTcwNDIyIDQuMTgyMDIxMTgsMjEuMDAzMDQyMiA3LjUwMDAyMTE4LDIwLjk5ODA0MjIgTDEyLjAwMDAyMTIsMjAuOTk4MDQyMiBMMTIuMDAwMDIxMiwyMi45OTgwNDIyIFoiIGlkPSJGaWxsLTQiPjwvcGF0aD4KICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+",
	reflect.TypeOf(RegionTreeNode{}):        "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMjNweCIgaGVpZ2h0PSIyOHB4IiB2aWV3Qm94PSIwIDAgMjMgMjgiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDUzICg3MjUyMCkgLSBodHRwczovL3NrZXRjaGFwcC5jb20gLS0+CiAgICA8dGl0bGU+UmVnaW9uIEJsYWNrPC90aXRsZT4KICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPgogICAgPGcgaWQ9IlBhZ2UtMSIgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCI+CiAgICAgICAgPGcgaWQ9IlJlZ2lvbi1CbGFjayIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMC4xMjUwMDAsIDAuMDAwMDAwKSIgZmlsbD0iIzAwMDAwMCI+CiAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMS4wMDAyLDggQzkuMzQzMiw4IDguMDAwMiw5LjM0MyA4LjAwMDIsMTEgQzguMDAwMiwxMi42NTcgOS4zNDMyLDE0IDExLjAwMDIsMTQgQzEyLjY1NzIsMTQgMTQuMDAwMiwxMi42NTcgMTQuMDAwMiwxMSBDMTMuOTk4Miw5LjM0NCAxMi42NTYyLDguMDAyIDExLjAwMDIsOCBNMTEuMDAwMiwxNiBDOC4yMzgyLDE2IDYuMDAwMiwxMy43NjEgNi4wMDAyLDExIEM2LjAwMDIsOC4yMzkgOC4yMzgyLDYgMTEuMDAwMiw2IEMxMy43NjEyLDYgMTYuMDAwMiw4LjIzOSAxNi4wMDAyLDExIEMxNS45OTcyLDEzLjc2IDEzLjc2MDIsMTUuOTk3IDExLjAwMDIsMTYiIGlkPSJGaWxsLTEiPjwvcGF0aD4KICAgICAgICAgICAgPGcgaWQ9Ikdyb3VwLTUiPgogICAgICAgICAgICAgICAgPHBhdGggZD0iTTMuODEyNywxNi4zOTUgQzMuODEzNywxNi4zOTUgNC4wNDU3LDE2LjcwMyA0LjA5ODcsMTYuNzcgTDEwLjk5OTcsMjQuOTA4IEwxNy45MTA3LDE2Ljc1OCBDMTcuOTU0NywxNi43MDMgMTguMTg4NywxNi4zOTMgMTguMTg4NywxNi4zOTIgQzE5LjM2NjcsMTQuODQxIDIwLjAwMTcsMTIuOTQ3IDE5Ljk5OTcsMTEgQzE5Ljk5OTcsNi4wMjkgMTUuOTcwNywyIDEwLjk5OTcsMiBDNi4wMjk3LDIgMi4wMDA3LDYuMDI5IDIuMDAwNywxMSBDMS45OTc3LDEyLjk0OCAyLjYzNDcsMTQuODQzIDMuODEyNywxNi4zOTUgTDMuODEyNywxNi4zOTUgWiBNMTAuOTk5NywyOCBMMi41NjQ3LDE4LjA1MSBDMi41MTY3LDE3Ljk5NCAyLjIxNjcsMTcuNiAyLjIxNjcsMTcuNiBDMC43NzQ3LDE1LjcwMiAtMC4wMDMzLDEzLjM4MyAtMC4wMDAzLDExIEMtMC4wMDAzLDQuOTI1IDQuOTI0NywwIDEwLjk5OTcsMCBDMTcuMDc1NywwIDIxLjk5OTcsNC45MjUgMjEuOTk5NywxMSBDMjIuMDAyNywxMy4zODIgMjEuMjI1NywxNS43IDE5Ljc4NTcsMTcuNTk3IEwxOS43ODM3LDE3LjYgQzE5Ljc4MzcsMTcuNiAxOS40ODM3LDE3Ljk5NCAxOS40Mzg3LDE4LjA0NyBMMTAuOTk5NywyOCBaIiBpZD0iRmlsbC0zIj48L3BhdGg+CiAgICAgICAgICAgIDwvZz4KICAgICAgICA8L2c+CiAgICA8L2c+Cjwvc3ZnPg==",
	reflect.TypeOf(CloudTreeNode{}):         "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMzNweCIgaGVpZ2h0PSIzMXB4IiB2aWV3Qm94PSIwIDAgMzMgMzEiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDUzICg3MjUyMCkgLSBodHRwczovL3NrZXRjaGFwcC5jb20gLS0+CiAgICA8dGl0bGU+SUJNIENsb3VkIEJsYWNrPC90aXRsZT4KICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPgogICAgPGcgaWQ9IlBhZ2UtMSIgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCI+CiAgICAgICAgPGcgaWQ9IklCTS1DbG91ZC1CbGFjayIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMC43ODQ3MjIsIDAuNTAwMTI1KSIgZmlsbD0iIzAwMDAwMCI+CiAgICAgICAgICAgIDxwYXRoIGQ9Ik0yNy4xMDIxLDI3LjAxMDYgQzI1Ljg3MDEsMjcuODc5NiAyNC4zNjExLDI4LjI2NzYgMjIuODUzMSwyOC4yNjc2IEw3LjAwNDEsMjguMjY3NiBDNC4xMTIxLDI4LjI3NDYgMS43NjIxLDI1LjkzNDYgMS43NTUxLDIzLjA0MjYgQzEuNzQ5MSwyMC40MTA2IDMuNjk3MSwxOC4xODM2IDYuMzA1MSwxNy44Mzg2IEM2LjQxMTEsMTkuMTYxNiA2Ljc4NzEsMjAuNDQ5NiA3LjQwOTEsMjEuNjIxNiBDNy41OTUxLDIxLjk5MTYgOC4wNDYxLDIyLjE0MDYgOC40MTYxLDIxLjk1NDYgQzguNzg2MSwyMS43Njc2IDguOTM1MSwyMS4zMTc2IDguNzQ4MSwyMC45NDc2IEw4LjczMDEsMjAuOTEyNiBDNy4xMzIxLDE3LjkzNTYgNy40MjkxLDE0LjIxNzYgOS42NzIxLDExLjY4OTYgQzEzLjQ4NjEsNy4zOTI2IDE5Ljc4NzEsOC4wNTI2IDIyLjc1NzEsMTIuMjgxNiBDMjAuMzM0MSwxMi4zNDc2IDE4LjA0NzEsMTMuNDE1NiAxNi40NDExLDE1LjIzMDYgQzE2LjE2MTEsMTUuNTM1NiAxNi4xODExLDE2LjAxMDYgMTYuNDg1MSwxNi4yOTA2IEMxNi43ODkxLDE2LjU3MTYgMTcuMjY0MSwxNi41NTI2IDE3LjU0NTEsMTYuMjQ3NiBMMTcuNTY2MSwxNi4yMjI2IEMxOS41OTUxLDEzLjkyMzYgMjIuODg0MSwxMy4wNTI2IDI1LjcwMzEsMTQuMjYzNiBDMzEuMTY1MSwxNi42MDk2IDMxLjgxMDEsMjMuNjkyNiAyNy4xMDIxLDI3LjAxMDYgTTI0LjU4NTEsMTIuOTE3NiBDMjIuMDU0MSw4LjE3NTYgMTYuMTU5MSw2LjM4MjYgMTEuNDE2MSw4LjkxMzYgQzguNDY1MSwxMC40ODg2IDYuNTI5MSwxMy40Njg2IDYuMjkwMSwxNi44MDY2IEMyLjU4NDEsMTcuMjA0NiAtMC4wOTc5LDIwLjUzMjYgMC4zMDExLDI0LjIzOTYgQzAuNjY5MSwyNy42NjU2IDMuNTU5MSwzMC4yNjM2IDcuMDA0MSwzMC4yNjc2IEwyMy4wMDQxLDMwLjI2NzYgQzI3LjgzNTEsMzAuMjcwNiAzMS43NTMxLDI2LjM1NzYgMzEuNzU2MSwyMS41MjY2IEMzMS43NTkxLDE3LjMwMTYgMjguNzQxMSwxMy42Nzg2IDI0LjU4NTEsMTIuOTE3NiIgaWQ9IkZpbGwtMSI+PC9wYXRoPgogICAgICAgICAgICA8ZyBpZD0iR3JvdXAtNSIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMjcuMDAwMDAwLCA4LjI2NzcwMCkiPgogICAgICAgICAgICAgICAgPHBhdGggZD0iTTQuOTAyOCwwLjkxOTcgQzQuNjkzOCwwLjU1NjcgNC4yMjk4LDAuNDMyNyAzLjg2NjgsMC42NDE3IEMzLjg2NjgsMC42NDE3IDMuODY2OCwwLjY0MTcgMy44NjY4LDAuNjQyNyBMMC44NDY4LDIuMzg1NyBDMC40Nzg4LDIuNTg2NyAwLjM0MzgsMy4wNDc3IDAuNTQ0OCwzLjQxNTcgQzAuNzQ1OCwzLjc4MzcgMS4yMDY4LDMuOTE4NyAxLjU3NDgsMy43MTc3IEMxLjU4NDgsMy43MTE3IDEuNTk0OCwzLjcwNTcgMS42MDQ4LDMuNjk5NyBMNC42MjQ4LDEuOTU2NyBDNC45ODc4LDEuNzQ2NyA1LjExMTgsMS4yODI3IDQuOTAyOCwwLjkxOTciIGlkPSJGaWxsLTMiPjwvcGF0aD4KICAgICAgICAgICAgPC9nPgogICAgICAgICAgICA8cGF0aCBkPSJNMjIuNjgxMiw2LjgwMjYgQzIzLjA0MzIsNy4wMTI2IDIzLjUwNzIsNi44ODg2IDIzLjcxNzIsNi41MjU2IEwyMy43MTcyLDYuNTI1NiBMMjUuNDYxMiwzLjUwNTYgQzI1LjY2ODIsMy4xNDA2IDI1LjU0MDIsMi42Nzc2IDI1LjE3NjIsMi40NzA2IEMyNC44MTUyLDIuMjY2NiAyNC4zNTcyLDIuMzg4NiAyNC4xNDcyLDIuNzQ2NiBMMjIuNDAzMiw1Ljc2NjYgQzIyLjE5NDIsNi4xMjk2IDIyLjMxODIsNi41OTM2IDIyLjY4MTIsNi44MDI2IiBpZD0iRmlsbC02Ij48L3BhdGg+CiAgICAgICAgICAgIDxwYXRoIGQ9Ik0xNi4wMDQ0LDUuMDE0MSBDMTYuNDIzNCw1LjAxNDEgMTYuNzYzNCw0LjY3NDEgMTcuMzM1NCw0LjI1NTEgTDE3LjMzNTQsMC43NjcxIEMxNi43Njg0LDAuMzQ4MSAxNi40MzI0LDAuMDA1MSAxNi4wMTM0LDAuMDAwMSBDMTUuNTk0NCwtMC4wMDQ5IDE1LjI1MTQsMC4zMzExIDE1LjMzNTQsMC43NTAxIEwxNS4zMzU0LDAuNzY3MSBMMTUuMzM1NCw0LjI1NTEgQzE1LjI0NjQsNC42NzQxIDE1LjU4NTQsNS4wMTQxIDE2LjAwNDQsNS4wMTQxIiBpZD0iRmlsbC04Ij48L3BhdGg+CiAgICAgICAgICAgIDxwYXRoIGQ9Ik04LjI5Miw2LjUyNDggQzguNTA0LDYuODg1OCA4Ljk2OSw3LjAwNjggOS4zMzEsNi43OTQ4IEM5LjY4OCw2LjU4NDggOS44MTEsNi4xMjY4IDkuNjA2LDUuNzY1OCBMNy44NjIsMi43NDU4IEM3LjY1NSwyLjM4MTggNy4xOTIsMi4yNTM4IDYuODI4LDIuNDYwOCBDNi40NjMsMi42Njc4IDYuMzM1LDMuMTMwOCA2LjU0MiwzLjQ5NDggQzYuNTQ0LDMuNDk4OCA2LjU0NiwzLjUwMTggNi41NDgsMy41MDQ4IEw4LjI5Miw2LjUyNDggWiIgaWQ9IkZpbGwtMTAiPjwvcGF0aD4KICAgICAgICAgICAgPGcgaWQ9Ikdyb3VwLTE0IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjAwMDAwMCwgOC4yNjc3MDApIj4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik00LjE2MzEsMi4zODYgTDEuMTQzMSwwLjY0MiBDMC43ODIxLDAuNDMgMC4zMTcxLDAuNTUxIDAuMTA0MSwwLjkxMiBDLTAuMTA3OSwxLjI3MyAwLjAxMzEsMS43MzkgMC4zNzQxLDEuOTUgQzAuMzc4MSwxLjk1MiAwLjM4MTEsMS45NTQgMC4zODQxLDEuOTU2IEwzLjQwNTEsMy43IEMzLjc2NjEsMy45MTIgNC4yMzExLDMuNzkxIDQuNDQzMSwzLjQzIEM0LjY1NTEsMy4wNjkgNC41MzUxLDIuNjA0IDQuMTczMSwyLjM5MiBDNC4xNzAxLDIuMzkgNC4xNjYxLDIuMzg4IDQuMTYzMSwyLjM4NiBaIiBpZD0iRmlsbC0xMiI+PC9wYXRoPgogICAgICAgICAgICA8L2c+CiAgICAgICAgPC9nPgogICAgPC9nPgo8L3N2Zz4=",
	reflect.TypeOf(VpcTreeNode{}):           "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMzNweCIgaGVpZ2h0PSIyOHB4IiB2aWV3Qm94PSIwIDAgMzMgMjgiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDUzICg3MjUyMCkgLSBodHRwczovL3NrZXRjaGFwcC5jb20gLS0+CiAgICA8dGl0bGU+VlBDIEJsYWNrPC90aXRsZT4KICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPgogICAgPGRlZnM+CiAgICAgICAgPHBvbHlnb24gaWQ9InBhdGgtMSIgcG9pbnRzPSIwIDAuOTk4IDMyIDAuOTk4IDMyIDI0LjAwMDIgMCAyNC4wMDAyIj48L3BvbHlnb24+CiAgICA8L2RlZnM+CiAgICA8ZyBpZD0iUGFnZS0xIiBzdHJva2U9Im5vbmUiIHN0cm9rZS13aWR0aD0iMSIgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj4KICAgICAgICA8ZyBpZD0iVlBDLUJsYWNrIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjQ0NDU3MCwgLTAuOTk5ODc1KSI+CiAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMi4wMDEzLDI3LjAwMTggTDEyLjAwMTMsMjEuMDAxOCBMMjAuMDAxMywyMS4wMDE4IEwyMC4wMDIzLDI3LjAwMTggTDEyLjAwMTMsMjcuMDAxOCBaIE0xNC4wMDEzLDE2LjAwMTggQzE0LjAwMTMsMTQuODk3OCAxNC44OTczLDE0LjAwMTggMTYuMDAxMywxNC4wMDE4IEMxNy4xMDUzLDE0LjAwMTggMTguMDAxMywxNC44OTc4IDE4LjAwMTMsMTYuMDAxOCBMMTguMDAxMywxOS4wMDE4IEwxNC4wMDEzLDE5LjAwMTggTDE0LjAwMTMsMTYuMDAxOCBaIE0yMC4wMDEzLDE5LjAwMTggTDIwLjAwMTMsMTYuMDAxOCBDMjAuMDAxMywxMy43OTI4IDE4LjIxMDMsMTIuMDAxOCAxNi4wMDEzLDEyLjAwMTggQzEzLjc5MjMsMTIuMDAxOCAxMi4wMDEzLDEzLjc5MjggMTIuMDAxMywxNi4wMDE4IEwxMi4wMDEzLDE5LjAwMTggQzEwLjg5NzMsMTkuMDAyOCAxMC4wMDIzLDE5Ljg5NzggMTAuMDAxMywyMS4wMDE4IEwxMC4wMDEzLDI3LjAwMTggQzEwLjAwMjMsMjguMTA1OCAxMC44OTczLDI5LjAwMDggMTIuMDAxMywyOS4wMDE4IEwyMC4wMDEzLDI5LjAwMTggQzIxLjEwNTMsMjkuMDAwOCAyMi4wMDAzLDI4LjEwNTggMjIuMDAxMywyNy4wMDE4IEwyMi4wMDEzLDIxLjAwMTggQzIyLjAwMDMsMTkuODk3OCAyMS4xMDUzLDE5LjAwMjggMjAuMDAxMywxOS4wMDE4IEwyMC4wMDEzLDE5LjAwMTggWiIgaWQ9IkZpbGwtMSIgZmlsbD0iIzAwMDAwMCI+PC9wYXRoPgogICAgICAgICAgICA8ZyBpZD0iR3JvdXAtNSIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMC4wMDAwMDAsIDAuMDAxODAwKSI+CiAgICAgICAgICAgICAgICA8bWFzayBpZD0ibWFzay0yIiBmaWxsPSJ3aGl0ZSI+CiAgICAgICAgICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPSIjcGF0aC0xIj48L3VzZT4KICAgICAgICAgICAgICAgIDwvbWFzaz4KICAgICAgICAgICAgICAgIDxnIGlkPSJDbGlwLTQiPjwvZz4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0yNS44MzA0LDkuMTE1MiBDMjUuMDU2NCw1LjA5NTIgMjEuOTExNCwxLjk1MzIgMTcuODkxNCwxLjE4MTIgQzEyLjQ2NzQsMC4xMzQyIDcuMjIxNCwzLjY4MTIgNi4xNzM0LDkuMTA1MiBDNi4xNzI0LDkuMTA4MiA2LjE3MTQsOS4xMTIyIDYuMTcxNCw5LjExNTIgQzIuMDk0NCw5Ljg1MDIgLTAuNjE1NiwxMy43NTIyIDAuMTIwNCwxNy44MzAyIEMwLjc2NDQsMjEuMzk3MiAzLjg2NzQsMjMuOTk1MiA3LjQ5MjQsMjQuMDAwMiBMOC4wMDE0LDI0LjAwMDIgTDguMDAxNCwyMi4wMDAyIEw3LjQ5NjQsMjIuMDAwMiBDNC40NTc0LDIxLjk5NjIgMS45OTc0LDE5LjUzMDIgMi4wMDE0LDE2LjQ5MTIgQzIuMDA0NCwxMy44MzIyIDMuOTEwNCwxMS41NTUyIDYuNTI3NCwxMS4wODMyIEw3Ljg3NTQsMTAuODM5MiBMOC4xMzU0LDkuNDkzMiBDOC45NzQ0LDUuMTQ5MiAxMy4xNzU0LDIuMzA4MiAxNy41MTk0LDMuMTQ3MiBDMjAuNzMyNCwzLjc2NzIgMjMuMjQ1NCw2LjI4MDIgMjMuODY2NCw5LjQ5MzIgTDI0LjEyNTQsMTAuODM5MiBMMjUuNDc0NCwxMS4wODMyIEMyOC40NjQ0LDExLjYyMjIgMzAuNDUxNCwxNC40ODQyIDI5LjkxMjQsMTcuNDc0MiBDMjkuNDQwNCwyMC4wOTAyIDI3LjE2NzQsMjEuOTk1MiAyNC41MDk0LDIyLjAwMDIgTDI0LjAwMTQsMjIuMDAwMiBMMjQuMDAxNCwyNC4wMDAyIEwyNC41MDk0LDI0LjAwMDIgQzI4LjY1MTQsMjMuOTk0MiAzMi4wMDY0LDIwLjYzMTIgMzIuMDAwNCwxNi40ODcyIEMzMS45OTQ0LDEyLjg2MjIgMjkuMzk3NCw5Ljc1OTIgMjUuODMwNCw5LjExNTIiIGlkPSJGaWxsLTMiIGZpbGw9IiMwMDAwMDAiIG1hc2s9InVybCgjbWFzay0yKSI+PC9wYXRoPgogICAgICAgICAgICA8L2c+CiAgICAgICAgPC9nPgogICAgPC9nPgo8L3N2Zz4=",
	reflect.TypeOf(ZoneTreeNode{}):          "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMjlweCIgaGVpZ2h0PSIyNnB4IiB2aWV3Qm94PSIwIDAgMjkgMjYiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDUzICg3MjUyMCkgLSBodHRwczovL3NrZXRjaGFwcC5jb20gLS0+CiAgICA8dGl0bGU+Wm9uZSBCbGFjazwvdGl0bGU+CiAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz4KICAgIDxnIGlkPSJQYWdlLTEiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgICAgIDxnIGlkPSJab25lLUJsYWNrIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjEyNTAwMCwgMC4wMDAwMDApIiBmaWxsPSIjMDAwMDAwIj4KICAgICAgICAgICAgPGcgaWQ9Ikdyb3VwLTMiPgogICAgICAgICAgICAgICAgPHBhdGggZD0iTTI2LjAwMDEsMjQuMDAwMSBMMjEuMDAwMSwyNC4wMDAxIEwyMS4wMDAxLDIwLjAwMDEgTDIzLjAwMDEsMjAuMDAwMSBMMjMuMDAwMSwxOC4wMDAxIEwyMS4wMDAxLDE4LjAwMDEgTDIxLjAwMDEsMTYuMDAwMSBMMjMuMDAwMSwxNi4wMDAxIEwyMy4wMDAxLDE0LjAwMDEgTDIxLjAwMDEsMTQuMDAwMSBMMjEuMDAwMSwxMi4wMDAxIEwyMy4wMDAxLDEyLjAwMDEgTDIzLjAwMDEsMTAuMDAwMSBMMjEuMDAwMSwxMC4wMDAxIEwyMS4wMDAxLDguMDAwMSBMMjYuMDAwMSw4LjAwMDEgTDI2LjAwMDEsMjQuMDAwMSBaIE05LjAwMDEsMjQuMDAwMSBMMTkuMDAwMSwyNC4wMDAxIEwxOS4wMDAxLDIuMDAwMSBMOS4wMDAxLDIuMDAwMSBMOS4wMDAxLDI0LjAwMDEgWiBNMi4wMDAxLDI0LjAwMDEgTDIuMDAwMSw4LjAwMDEgTDcuMDAwMSw4LjAwMDEgTDcuMDAwMSwxMC4wMDAxIEw1LjAwMDEsMTAuMDAwMSBMNS4wMDAxLDEyLjAwMDEgTDcuMDAwMSwxMi4wMDAxIEw3LjAwMDEsMTQuMDAwMSBMNS4wMDAxLDE0LjAwMDEgTDUuMDAwMSwxNi4wMDAxIEw3LjAwMDEsMTYuMDAwMSBMNy4wMDAxLDE4LjAwMDEgTDUuMDAwMSwxOC4wMDAxIEw1LjAwMDEsMjAuMDAwMSBMNy4wMDAxLDIwLjAwMDEgTDcuMDAwMSwyNC4wMDAxIEwyLjAwMDEsMjQuMDAwMSBaIE0yNi4wMDAxLDYuMDAwMSBMMjEuMDAwMSw2LjAwMDEgTDIxLjAwMDEsMi4wMDAxIEMyMC45OTkxLDAuODk2MSAyMC4xMDQxLDAuMDAxMSAxOS4wMDAxLDAuMDAwMSBMOS4wMDAxLDAuMDAwMSBDNy44OTYxLDAuMDAxMSA3LjAwMTEsMC44OTYxIDcuMDAwMSwyLjAwMDEgTDcuMDAwMSw2LjAwMDEgTDIuMDAwMSw2LjAwMDEgQzAuODk2MSw2LjAwMTEgMC4wMDExLDYuODk2MSAwLjAwMDEsOC4wMDAxIEwwLjAwMDEsMjQuMDAwMSBDMC4wMDExLDI1LjEwNDEgMC44OTYxLDI1Ljk5OTEgMi4wMDAxLDI2LjAwMDEgTDI2LjAwMDEsMjYuMDAwMSBDMjcuMTA0MSwyNS45OTkxIDI3Ljk5OTEsMjUuMTA0MSAyOC4wMDAxLDI0LjAwMDEgTDI4LjAwMDEsOC4wMDAxIEMyNy45OTkxLDYuODk2MSAyNy4xMDQxLDYuMDAxMSAyNi4wMDAxLDYuMDAwMSBMMjYuMDAwMSw2LjAwMDEgWiIgaWQ9IkZpbGwtMSI+PC9wYXRoPgogICAgICAgICAgICA8L2c+CiAgICAgICAgICAgIDxwb2x5Z29uIGlkPSJGaWxsLTQiIHBvaW50cz0iMTIgNiAxNiA2IDE2IDQgMTIgNCI+PC9wb2x5Z29uPgogICAgICAgICAgICA8cG9seWdvbiBpZD0iRmlsbC02IiBwb2ludHM9IjEyIDEwIDE2IDEwIDE2IDggMTIgOCI+PC9wb2x5Z29uPgogICAgICAgICAgICA8cG9seWdvbiBpZD0iRmlsbC03IiBwb2ludHM9IjEyIDE0IDE2IDE0IDE2IDEyIDEyIDEyIj48L3BvbHlnb24+CiAgICAgICAgPC9nPgogICAgPC9nPgo8L3N2Zz4=",
	reflect.TypeOf(PartialSGTreeNode{}):     "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMjhweCIgaGVpZ2h0PSIyOHB4IiB2aWV3Qm94PSIwIDAgMjggMjgiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDUzICg3MjUyMCkgLSBodHRwczovL3NrZXRjaGFwcC5jb20gLS0+CiAgICA8dGl0bGU+U2VjdXJpdHkgR3JvdXAgQmxhY2s8L3RpdGxlPgogICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+CiAgICA8ZGVmcz4KICAgICAgICA8cG9seWdvbiBpZD0icGF0aC0xIiBwb2ludHM9IjAgMC4wMDA0IDI0IDAuMDAwNCAyNCAyOCAwIDI4Ij48L3BvbHlnb24+CiAgICA8L2RlZnM+CiAgICA8ZyBpZD0iUGFnZS0xIiBzdHJva2U9Im5vbmUiIHN0cm9rZS13aWR0aD0iMSIgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj4KICAgICAgICA8ZyBpZD0iU2VjdXJpdHktR3JvdXAtQmxhY2siPgogICAgICAgICAgICA8cGF0aCBkPSJNOSwxOSBMNywxOSBMNywxNyBDNy4wMDIsMTUuMzQ0IDguMzQ0LDE0LjAwMiAxMCwxNCBMMTYsMTQgTDE2LDE2IEwxMCwxNiBDOS40NDgsMTYgOS4wMDEsMTYuNDQ4IDksMTcgTDksMTkgWiIgaWQ9IkZpbGwtMSIgZmlsbD0iIzAwMDAwMCI+PC9wYXRoPgogICAgICAgICAgICA8cGF0aCBkPSJNMTMsNyBDMTEuODk2LDcgMTEsNy44OTYgMTEsOSBDMTEsMTAuMTA0IDExLjg5NiwxMSAxMywxMSBDMTQuMTA0LDExIDE1LDEwLjEwNCAxNSw5IEMxNC45OTksNy44OTYgMTQuMTA0LDcuMDAxIDEzLDcgTTEzLDEzIEMxMC43OTEsMTMgOSwxMS4yMDkgOSw5IEM5LDYuNzkxIDEwLjc5MSw1IDEzLDUgQzE1LjIwOSw1IDE3LDYuNzkxIDE3LDkgQzE2Ljk5NywxMS4yMDggMTUuMjA4LDEyLjk5OCAxMywxMyIgaWQ9IkZpbGwtMyIgZmlsbD0iIzAwMDAwMCI+PC9wYXRoPgogICAgICAgICAgICA8cGF0aCBkPSJNMjIsMTQgQzIwLjg5NiwxNCAyMCwxNC44OTYgMjAsMTYgQzIwLDE3LjEwNCAyMC44OTYsMTggMjIsMTggQzIzLjEwNCwxOCAyNCwxNy4xMDQgMjQsMTYgQzIzLjk5OSwxNC44OTYgMjMuMTA0LDE0LjAwMSAyMiwxNCBNMjIsMjAgQzE5Ljc5MSwyMCAxOCwxOC4yMDkgMTgsMTYgQzE4LDEzLjc5MSAxOS43OTEsMTIgMjIsMTIgQzI0LjIwOSwxMiAyNiwxMy43OTEgMjYsMTYgQzI1Ljk5NywxOC4yMDggMjQuMjA4LDE5Ljk5OCAyMiwyMCIgaWQ9IkZpbGwtNSIgZmlsbD0iIzAwMDAwMCI+PC9wYXRoPgogICAgICAgICAgICA8cGF0aCBkPSJNMjgsMjYgTDI2LDI2IEwyNiwyNCBDMjUuOTk5LDIzLjQ0OCAyNS41NTIsMjMgMjUsMjMgTDE5LDIzIEMxOC40NDgsMjMgMTguMDAxLDIzLjQ0OCAxOCwyNCBMMTgsMjYgTDE2LDI2IEwxNiwyNCBDMTYuMDAyLDIyLjM0NCAxNy4zNDQsMjEuMDAyIDE5LDIxIEwyNSwyMSBDMjYuNjU2LDIxLjAwMiAyNy45OTgsMjIuMzQ0IDI4LDI0IEwyOCwyNiBaIiBpZD0iRmlsbC03IiBmaWxsPSIjMDAwMDAwIj48L3BhdGg+CiAgICAgICAgICAgIDxnIGlkPSJHcm91cC0xMSI+CiAgICAgICAgICAgICAgICA8bWFzayBpZD0ibWFzay0yIiBmaWxsPSJ3aGl0ZSI+CiAgICAgICAgICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPSIjcGF0aC0xIj48L3VzZT4KICAgICAgICAgICAgICAgIDwvbWFzaz4KICAgICAgICAgICAgICAgIDxnIGlkPSJDbGlwLTEwIj48L2c+CiAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTIsMjUuNzMzNCBMNi43NjYsMjIuOTQyNCBDMy44MywyMS4zODA0IDEuOTk2LDE4LjMyNTQgMiwxNS4wMDA0IEwyLDIuMDAwNCBMMjIsMi4wMDA0IEwyMiw4LjAwMDQgTDI0LDguMDAwNCBMMjQsMi4wMDA0IEMyMy45OTksMC44OTY0IDIzLjEwNCwwLjAwMTQgMjIsMC4wMDA0IEwyLDAuMDAwNCBDMC44OTYsMC4wMDE0IDAuMDAxLDAuODk2NCAwLDIuMDAwNCBMMCwxNS4wMDA0IEMtMC4wMDUsMTkuMDY0NCAyLjIzNiwyMi43OTg0IDUuODI0LDI0LjcwNzQgTDEyLDI4LjAwMDQgTDEyLDI1LjczMzQgWiIgaWQ9IkZpbGwtOSIgZmlsbD0iIzAwMDAwMCIgbWFzaz0idXJsKCNtYXNrLTIpIj48L3BhdGg+CiAgICAgICAgICAgIDwvZz4KICAgICAgICA8L2c+CiAgICA8L2c+Cjwvc3ZnPg==",
	reflect.TypeOf(SubnetTreeNode{}):        "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMjlweCIgaGVpZ2h0PSIyOXB4IiB2aWV3Qm94PSIwIDAgMjkgMjkiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDUzICg3MjUyMCkgLSBodHRwczovL3NrZXRjaGFwcC5jb20gLS0+CiAgICA8dGl0bGU+SUJNIFN1Ym5ldCA6IEFDTCBCbGFjazwvdGl0bGU+CiAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz4KICAgIDxnIGlkPSJQYWdlLTEiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgICAgIDxnIGlkPSJJQk0tU3VibmV0LTotQUNMLUJsYWNrIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjc1MDAwMCwgMC4wNzQ5NTkpIiBmaWxsPSIjMDAwMDAwIj4KICAgICAgICAgICAgPHBhdGggZD0iTTI0LjAxNjEsMjYuMjIyMSBDMjIuOTEyMSwyNi4yMjIxIDIyLjAxNjEsMjUuMzI2MSAyMi4wMTYxLDI0LjIyMjEgQzIyLjAxNjEsMjMuMTE4MSAyMi45MTIxLDIyLjIyMjEgMjQuMDE2MSwyMi4yMjIxIEMyNS4xMjAxLDIyLjIyMjEgMjYuMDE2MSwyMy4xMTgxIDI2LjAxNjEsMjQuMjIyMSBDMjYuMDEzMSwyNS4zMjUxIDI1LjExOTEsMjYuMjE5MSAyNC4wMTYxLDI2LjIyMjEgTTQuMDE2MSwyNi4yMjIxIEMyLjkxMjEsMjYuMjIyMSAyLjAxNjEsMjUuMzI2MSAyLjAxNjEsMjQuMjIyMSBDMi4wMTYxLDIzLjExODEgMi45MTIxLDIyLjIyMjEgNC4wMTYxLDIyLjIyMjEgQzUuMTIwMSwyMi4yMjIxIDYuMDE2MSwyMy4xMTgxIDYuMDE2MSwyNC4yMjIxIEM2LjAxMzEsMjUuMzI1MSA1LjExOTEsMjYuMjE5MSA0LjAxNjEsMjYuMjIyMSBNNC4wMTYxLDYuMjIyMSBDMi45MTIxLDYuMjIyMSAyLjAxNjEsNS4zMjYxIDIuMDE2MSw0LjIyMjEgQzIuMDE2MSwzLjExODEgMi45MTIxLDIuMjIyMSA0LjAxNjEsMi4yMjIxIEM1LjEyMDEsMi4yMjIxIDYuMDE2MSwzLjExODEgNi4wMTYxLDQuMjIyMSBDNi4wMTMxLDUuMzI1MSA1LjExOTEsNi4yMTkxIDQuMDE2MSw2LjIyMjEgTTI0LjAxNjEsMi4yMjIxIEMyNS4xMjAxLDIuMjIyMSAyNi4wMTYxLDMuMTE4MSAyNi4wMTYxLDQuMjIyMSBDMjYuMDE2MSw1LjMyNjEgMjUuMTIwMSw2LjIyMjEgMjQuMDE2MSw2LjIyMjEgQzIyLjkxMjEsNi4yMjIxIDIyLjAxNjEsNS4zMjYxIDIyLjAxNjEsNC4yMjIxIEMyMi4wMTkxLDMuMTE4MSAyMi45MTMxLDIuMjI1MSAyNC4wMTYxLDIuMjIyMSBNMjQuMDE2MSwyMC4wMDAxIEMyMy4zMDUxLDE5Ljk5ODEgMjIuNjA5MSwyMC4yMDcxIDIyLjAxNjEsMjAuNjAwMSBMMTcuNDMwMSwxNi4wMDAxIEwxNi4wMTYxLDE3LjQxNDEgTDIwLjYxNjEsMjIuMDAwMSBDMjAuNDQwMSwyMi4zMTQxIDIwLjMwNjEsMjIuNjUxMSAyMC4yMTYxLDIzLjAwMDEgTDcuODc0MSwyMy4wMDAxIEM3Ljc3NDEsMjIuNjQ1MSA3LjYyMDEsMjIuMzA3MSA3LjQxNjEsMjIuMDAwMSBMMjIuMDE2MSw3LjQwMDEgQzIzLjgwNzEsOC41ODYxIDI2LjUzNzEsOC4wOTQxIDI3Ljc5NDEsNS4xOTgxIEMyNy45MTAxLDQuOTMyMSAyNy45OTIxLDQuNjQ0MSAyOC4wMTYxLDQuMzU1MSBDMjguMjIxMSwxLjk5NDEgMjYuMzcwMSwwLjAwOTEgMjQuMDQ4MSwwLjAwMDEgQzIyLjIxODEsLTAuMDA2OSAyMC42MTcxLDEuMjI4MSAyMC4xNTkxLDMuMDAwMSBMNy45MTYxLDMuMDAwMSBDNy40MzMxLDEuMjQwMSA1Ljg0MTEsMC4wMTUxIDQuMDE2MSwwLjAwMDEgQzEuNjc0MSwwLjAwMDEgLTAuMTk2OSwyLjAxMjEgMC4wMzYxLDQuNDAyMSBDMC4wNjcxLDQuNzIzMSAwLjE2MzEsNS4wNDExIDAuMjk5MSw1LjMzNTEgQzEuNTgyMSw4LjEwOTEgNC4yNTQxLDguNTY3MSA2LjAxNjEsNy40MDAxIEwxMC42MDIxLDEyLjAwMDEgTDEyLjAxNjEsMTAuNTg2MSBMNy40MTYxLDYuMDAwMSBDNy41OTIxLDUuNjg1MSA3LjcyNjEsNS4zNDkxIDcuODE2MSw1LjAwMDEgTDIwLjE1ODEsNS4wMDAxIEMyMC4yNTgxLDUuMzU1MSAyMC40MTIxLDUuNjkyMSAyMC42MTYxLDYuMDAwMSBMNi4wMTYxLDIwLjYwMDEgQzQuMjI0MSwxOS40MTMxIDEuNDk0MSwxOS45MDcxIDAuMjM3MSwyMi44MDUxIEMwLjEyMjEsMjMuMDcwMSAwLjA0MDEsMjMuMzU3MSAwLjAxNjEsMjMuNjQ1MSBDLTAuMTg3OSwyNi4wMDYxIDEuNjYzMSwyNy45OTExIDMuOTg0MSwyOC4wMDAxIEM1LjgxNDEsMjguMDA3MSA3LjQxNTEsMjYuNzcyMSA3Ljg3MzEsMjUuMDAwMSBMMjAuMTE2MSwyNS4wMDAxIEMyMC43MjkxLDI3LjQxMzEgMjMuNDEyMSwyOC43NTUxIDI1Ljc4NzEsMjcuNjEwMSBDMjcuMTAzMSwyNi45NzUxIDI3Ljk4NzEsMjUuNjA0MSAyOC4wMTgxLDI0LjE0MzEgQzI4LjA2ODEsMjEuNzk1MSAyNi4yMTIxLDIwLjAwNjEgMjQuMDE2MSwyMC4wMDAxIiBpZD0iRmlsbC0xIj48L3BhdGg+CiAgICAgICAgPC9nPgogICAgPC9nPgo8L3N2Zz4=",

	// icons
	reflect.TypeOf(NITreeNode{}):              vsiImage,
	reflect.TypeOf(VsiTreeNode{}):             vsiImage,
	reflect.TypeOf(ResIPTreeNode{}):           vpeImage,
	reflect.TypeOf(VpeTreeNode{}):             vpeImage,
	reflect.TypeOf(UserTreeNode{}):            "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOm5vbmU7fS5jbHMtMntmaWxsOiNmZmY7ZmlsbC1ydWxlOmV2ZW5vZGQ7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IHg9IjAuNSIgeT0iMC41IiB3aWR0aD0iNDgiIGhlaWdodD0iNDgiIHJ4PSIyNCIvPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMTQuNSIgeT0iMTQuNSIgd2lkdGg9IjIwIiBoZWlnaHQ9IjIwIi8+PHBhdGggaWQ9IkZpbGwtMyIgY2xhc3M9ImNscy0yIiBkPSJNMzAuOCwzMy44N0gyOVYyOS41OUEyLjYzLDIuNjMsMCwwLDAsMjYuMywyN0gyMi43QTIuNjMsMi42MywwLDAsMCwyMCwyOS41OXY0LjI4SDE4LjJWMjkuNTlhNC40MSw0LjQxLDAsMCwxLDQuNS00LjI4aDMuNmE0LjQxLDQuNDEsMCwwLDEsNC41LDQuMjhaIi8+PHBhdGggaWQ9IkZpbGwtNSIgY2xhc3M9ImNscy0yIiBkPSJNMjQuNSwxNS4wNUE0LjM5LDQuMzksMCwwLDAsMjAsMTkuMzNhNC41MSw0LjUxLDAsMCwwLDksMCw0LjM5LDQuMzksMCwwLDAtNC41LTQuMjhtMCwxLjcxYTIuNTcsMi41NywwLDEsMS0yLjcsMi41NywyLjY0LDIuNjQsMCwwLDEsMi43LTIuNTciLz48L3N2Zz4=",
	reflect.TypeOf(GatewayTreeNode{}):         "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxMTkyZTg7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOm5vbmU7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjUiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIgcng9IjgiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0zMy41MSwyNS4zOGExLjIzLDEuMjMsMCwwLDAsMC0xLjc2TDI5Ljg5LDIwbDEuODEtMS43OWExLjI1LDEuMjUsMCwxLDAtLjU4LTIuMDksMS4yMiwxLjIyLDAsMCwwLS4zMiwxLjIyTDI5LDE5LjEybC0zLjYzLTMuNjNhMS4yMywxLjIzLDAsMCwwLTEuNzYsMEwyMCwxOS4xMWwtMS43OS0xLjgyYTEuMjQsMS4yNCwwLDEsMC0yLjA5LjU5LDEuMjIsMS4yMiwwLDAsMCwxLjIyLjMyTDE5LjEyLDIwbC0zLjYzLDMuNjNhMS4yMywxLjIzLDAsMCwwLDAsMS43NkwxOS4xMiwyOSwxNy4zNCwzMC44YTEuMjIsMS4yMiwwLDAsMC0xLjIyLjMyLDEuMjQsMS4yNCwwLDEsMCwyLjA5LjU5TDIwLDI5Ljg5bDMuNjIsMy42MmExLjIzLDEuMjMsMCwwLDAsMS43NiwwTDI5LDI5Ljg4bDEuNzksMS43OGExLjIyLDEuMjIsMCwwLDAsLjMyLDEuMjIsMS4yNCwxLjI0LDAsMSwwLC41OC0yLjA5TDI5Ljg5LDI5Wm0tOSw3LjI0TDE2LjM4LDI0LjVsOC4xMi04LjEyLDguMTIsOC4xMloiLz48cmVjdCBjbGFzcz0iY2xzLTMiIHg9IjE0LjUiIHk9IjE0LjUiIHdpZHRoPSIyMCIgaGVpZ2h0PSIyMCIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTI2LjM4LDIzLjI1SDIzLjI1VjIyYTEuMjUsMS4yNSwwLDAsMSwyLjUsMEgyN2EyLjUsMi41LDAsMCwwLTUsMHYxLjQyYTEuMjYsMS4yNiwwLDAsMC0uNjIsMS4wOHYzLjEyYTEuMjYsMS4yNiwwLDAsMCwxLjI0LDEuMjZoMy43NmExLjI2LDEuMjYsMCwwLDAsMS4yNC0xLjI2VjI0LjVBMS4yNSwxLjI1LDAsMCwwLDI2LjM4LDIzLjI1Wm0wLDQuMzdIMjIuNjJWMjQuNWgzLjc2WiIvPjwvc3ZnPg==",
	reflect.TypeOf(TransitGatewayTreeNode{}):  "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxMTkyZTg7fS5jbHMtMiwuY2xzLTR7ZmlsbDpub25lO30uY2xzLTJ7ZmlsbC1ydWxlOmV2ZW5vZGQ7fS5jbHMtM3tmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjUiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIvPjxnIGlkPSJtYXNrLTIiPjxwb2x5Z29uIGlkPSJwYXRoLTEiIGNsYXNzPSJjbHMtMiIgcG9pbnRzPSIxNy4xOCAxNC4yOSAzNy4xNyAxNC4yOSAzNy4xNyAzNC4yOSAxNy4xOCAzNC4yOSAxNy4xOCAxNC4yOSIvPjwvZz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0zMC42OSwyNy41NmwyLjE4LTIuMTlhMS4yMSwxLjIxLDAsMCwwLDAtMS43NWwtMy4zMS0zLjMxLjg4LS44N2EuNTYuNTYsMCwwLDAsLjMxLjA2LDEuMjUsMS4yNSwwLDEsMC0xLjI1LTEuMjUuNTcuNTcsMCwwLDAsLjA2LjMxbC0zLjgxLDMuODJBMi4yNiwyLjI2LDAsMCwwLDI0LjUsMjJhMi4xOSwyLjE5LDAsMCwwLTEuMjUuMzhsLTIuMDYtMi4wN0wyNC41LDE3bDIuMTksMi4xOS44Ny0uODgtMi4xOS0yLjE5YTEuMjEsMS4yMSwwLDAsMC0xLjc0LDBsLTMuMzIsMy4zMi0uODctLjg4YS41Ny41NywwLDAsMCwuMDYtLjMxLDEuMjUsMS4yNSwwLDEsMC0xLjI1LDEuMjUuNTcuNTcsMCwwLDAsLjMxLS4wNmwzLjgyLDMuODFBMi4yNiwyLjI2LDAsMCwwLDIyLDI0LjVhMi4xOSwyLjE5LDAsMCwwLC4zOCwxLjI1bC0yLjA3LDIuMDZMMTcsMjQuNWwyLjE5LTIuMTktLjg4LS44Ny0yLjE5LDIuMTlhMS4yLDEuMiwwLDAsMCwwLDEuNzRsMy4zMiwzLjMyLS44OC44N2EuNTcuNTcsMCwwLDAtLjMxLS4wNiwxLjI1LDEuMjUsMCwxLDAsMS4yNSwxLjI1LjU2LjU2LDAsMCwwLS4wNi0uMzFsMy44MS0zLjgyYTIuMjUsMi4yNSwwLDAsMCwyLjUsMGwyLjA2LDIuMDdMMjQuNSwzMmwtMi4xOS0yLjE5LS44Ny44OCwyLjE5LDIuMThhMS4xOSwxLjE5LDAsMCwwLDEuNzQsMGwzLjMyLTMuMzEuODcuODhjMCwuMTItLjA2LjE4LS4wNi4zMWExLjI1LDEuMjUsMCwxLDAsMS4yNS0xLjI1LjU2LjU2LDAsMCwwLS4zMS4wNmwtMy44Mi0zLjgxYTIuMjUsMi4yNSwwLDAsMCwwLTIuNWwyLjA3LTIuMDZMMzIsMjQuNWwtMi4xOSwyLjE5Wk0yNC41LDI1Ljc1YTEuMjUsMS4yNSwwLDEsMSwxLjI1LTEuMjVBMS4yNSwxLjI1LDAsMCwxLDI0LjUsMjUuNzVaIi8+PHJlY3QgY2xhc3M9ImNscy00IiB4PSIxNC41IiB5PSIxNC41IiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiLz48L3N2Zz4=",
	reflect.TypeOf(InternetTreeNode{}):        "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxMTkyZTg7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOm5vbmU7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjUiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIgcng9IjgiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0yNC41LDE1Ljc1YTguNzUsOC43NSwwLDEsMCw4Ljc1LDguNzVBOC43NSw4Ljc1LDAsMCwwLDI0LjUsMTUuNzVaTTMyLDIzLjg4SDI4LjI1YTE1LjE5LDE1LjE5LDAsMCwwLTEuNzQtNi42QTcuNSw3LjUsMCwwLDEsMzIsMjMuODhaTTI0LjUsMzJoLS40MkExMy43MiwxMy43MiwwLDAsMSwyMiwyNS4xMmg1QTEzLjYzLDEzLjYzLDAsMCwxLDI0Ljk0LDMyWk0yMiwyMy44OEExMy42MywxMy42MywwLDAsMSwyNC4wNiwxN2EzLjkzLDMuOTMsMCwwLDEsLjg0LDBBMTMuNjQsMTMuNjQsMCwwLDEsMjcsMjMuODhabS40OC02LjZhMTUuMTgsMTUuMTgsMCwwLDAtMS43Myw2LjZIMTdhNy41LDcuNSwwLDAsMSw1LjQ5LTYuNlpNMTcsMjUuMTJoMy43NWExNS4yLDE1LjIsMCwwLDAsMS43Miw2LjZBNy41Miw3LjUyLDAsMCwxLDE3LDI1LjEyWm05LjQ4LDYuNmExNS4xOSwxNS4xOSwwLDAsMCwxLjc0LTYuNkgzMkE3LjUsNy41LDAsMCwxLDI2LjUxLDMxLjcyWiIvPjxyZWN0IGlkPSJfVHJhbnNwYXJlbnRfUmVjdGFuZ2xlXyIgZGF0YS1uYW1lPSIgVHJhbnNwYXJlbnQgUmVjdGFuZ2xlICIgY2xhc3M9ImNscy0zIiB4PSIxNC41IiB5PSIxNC41IiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiLz48L3N2Zz4=",
	reflect.TypeOf(InternetServiceTreeNode{}): "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxMTkyZTg7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOm5vbmU7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjUiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTMxLjg3LDIwLjc1YTYuMjUsNi4yNSwwLDAsMC0xMi4yNi4wOCw0LjY4LDQuNjgsMCwwLDAsLjgzLDkuMjloLjk0VjI4Ljg3aC0uOTRBMy40MywzLjQzLDAsMCwxLDIwLjIsMjJsLjUyLDAsLjA2LS41MmE1LDUsMCwwLDEsOS44MS0uNzFaIi8+PHJlY3QgY2xhc3M9ImNscy0zIiB4PSIxNC41IiB5PSIxNC41IiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0zMS4zNywyOS41YTEuODQsMS44NCwwLDAsMC0xLjIuNDVsLTIuNTYtMS41NGMwLS4wNSwwLS4xLDAtLjE2czAtLjExLDAtLjE2bDIuNTYtMS41NGExLjg2LDEuODYsMCwwLDAsMS4yLjQ1LDEuODgsMS44OCwwLDEsMC0xLjg3LTEuODgsMS40MiwxLjQyLDAsMCwwLDAsLjM2bC0yLjQ1LDEuNDZhMS44NiwxLjg2LDAsMCwwLTEuMzQtLjU3LDEuODgsMS44OCwwLDAsMCwwLDMuNzUsMS44NSwxLjg1LDAsMCwwLDEuMzQtLjU2TDI5LjU0LDMxYTEuNDUsMS40NSwwLDAsMCwwLC4zNSwxLjg4LDEuODgsMCwxLDAsMS44Ny0xLjg3Wm0wLTVhLjYzLjYzLDAsMSwxLS42Mi42MkEuNjMuNjMsMCwwLDEsMzEuMzcsMjQuNVptLTUuNjIsNC4zN2EuNjMuNjMsMCwwLDEtLjYzLS42Mi42NC42NCwwLDAsMSwuNjMtLjYzLjYzLjYzLDAsMCwxLC42Mi42M0EuNjIuNjIsMCwwLDEsMjUuNzUsMjguODdaTTMxLjM3LDMyYS42My42MywwLDEsMSwuNjMtLjYzQS42My42MywwLDAsMSwzMS4zNywzMloiLz48L3N2Zz4=",
	reflect.TypeOf(LoadBalancerTreeNode{}):    loadBalancerImage,
	reflect.TypeOf(PrivateIPTreeNode{}):       loadBalancerImage,
	// reflect.TypeOf(EndPointTreeNode{}):        "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0OSA0OSI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxMTkyZTg7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOm5vbmU7fTwvc3R5bGU+PC9kZWZzPjxyZWN0IGNsYXNzPSJjbHMtMSIgeD0iMC41IiB5PSIwLjUiIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIvPjxwYXRoIGlkPSJ2cGNfZ3JhZGllbnRfYm90dG9tIiBkYXRhLW5hbWU9InZwYyBncmFkaWVudCBib3R0b20iIGNsYXNzPSJjbHMtMiIgZD0iTTI3LDMxLjM4SDE4Ljg4YTEuMjcsMS4yNywwLDAsMS0xLjI2LTEuMjVWMjJoMS4yNnY4LjEzSDI3WiIvPjxwYXRoIGlkPSJ2cGNfZ3JhZGllbnRfdG9wIiBkYXRhLW5hbWU9InZwYyBncmFkaWVudCB0b3AiIGNsYXNzPSJjbHMtMiIgZD0iTTMwLjEyLDI3aDEuMjZWMTguODhhMS4yNiwxLjI2LDAsMCwwLTEuMjYtMS4yNUgyMnYxLjI1aDguMTJaIi8+PHBhdGggaWQ9ImVuZHBvaW50cyIgY2xhc3M9ImNscy0yIiBkPSJNMjkuMTIsMjguMjVsLTIuNS0yLjVBMi4yNiwyLjI2LDAsMCwwLDI3LDI0LjUsMi41MSwyLjUxLDAsMCwwLDI0LjUsMjJhMi4xOSwyLjE5LDAsMCwwLTEuMjUuMzhsLTIuNS0yLjVWMTUuNzVoLTV2NWg0LjEzbDIuNSwyLjVBMi4yNiwyLjI2LDAsMCwwLDIyLDI0LjUsMi41MSwyLjUxLDAsMCwwLDI0LjUsMjdhMi4yNiwyLjI2LDAsMCwwLDEuMjUtLjM4bDIuNSwyLjV2NC4xM2g1di01Wk0xOS41LDE5LjVIMTdWMTdoMi41Wm01LDYuMjVhMS4yNSwxLjI1LDAsMSwxLDEuMjUtMS4yNUExLjI1LDEuMjUsMCwwLDEsMjQuNSwyNS43NVpNMzIsMzJIMjkuNVYyOS41SDMyWiIvPjxyZWN0IGNsYXNzPSJjbHMtMyIgeD0iMTQuNSIgeT0iMTQuNSIgd2lkdGg9IjIwIiBoZWlnaHQ9IjIwIi8+PC9zdmc+",

}
var miniImages = map[reflect.Type]string{
	reflect.TypeOf(NITreeNode{}):        niImage,
	reflect.TypeOf(ResIPTreeNode{}):     resIPImage,
	reflect.TypeOf(PrivateIPTreeNode{}): privateIPImage,
}
var colors = map[reflect.Type]string{
	reflect.TypeOf(PublicNetworkTreeNode{}):      "#1192E8",
	reflect.TypeOf(RegionTreeNode{}):             "#878d96",
	reflect.TypeOf(CloudTreeNode{}):              "#1192E8",
	reflect.TypeOf(VpcTreeNode{}):                "#1192E8",
	reflect.TypeOf(ZoneTreeNode{}):               "#878d96",
	reflect.TypeOf(SubnetTreeNode{}):             "#1192E8",
	reflect.TypeOf(PartialSGTreeNode{}):          "#FA4D56",
	reflect.TypeOf(GroupSquareTreeNode{}):        "#82b366",
	reflect.TypeOf(GroupSubnetsSquareTreeNode{}): "#82b366",
}

type tnFamily int

const (
	// these are types of elementas in the canvas:
	familyDoNotShow = iota
	familyIbmSquare
	familyGroupingSquare
	familyIbmIcon
	familyGroupingIcon
	familyLine
)
const (
	// currently relevant for line colors:
	blackColor = "black"
	blueColor  = "blue"
)

var colorCodes = map[string]string{blackColor: "#000000", blueColor: "#007FFF"}

// regular go constants can not be shared with the template, so we put them in a struct
type stylesConsts struct {
	DoNotShow,
	IbmSquare,
	GroupingSquare,
	IbmIcon,
	GroupingIcon,
	Line tnFamily
	// colorCodes
	ColorCodes map[string]string
}

func newStylesConst() stylesConsts {
	cnst := stylesConsts{
		DoNotShow:      familyDoNotShow,
		IbmSquare:      familyIbmSquare,
		GroupingSquare: familyGroupingSquare,
		IbmIcon:        familyIbmIcon,
		GroupingIcon:   familyGroupingIcon,
		Line:           familyLine,
		ColorCodes:     colorCodes,
	}
	return cnst
}

type templateStyles struct {
	Cnst                 stylesConsts
	canTypeHaveAMiniIcon map[reflect.Type]bool
}

func newTemplateStyles(nodes []TreeNodeInterface) templateStyles {
	stl := templateStyles{newStylesConst(), map[reflect.Type]bool{}}
	stl.setCanTypeHaveAMiniIcon(nodes)
	return stl
}

func (stl *templateStyles) tnFamily(tn TreeNodeInterface) tnFamily {
	switch {
	case tn.NotShownInDrawio():
		return familyDoNotShow
	case tn.IsSquare() && (tn.(SquareTreeNodeInterface).IsGroupingSquare() || tn.(SquareTreeNodeInterface).IsGroupSubnetsSquare()):
		return familyGroupingSquare
	case tn.IsSquare():
		return familyIbmSquare
	case tn.IsIcon() && tn.(IconTreeNodeInterface).IsGroupingPoint():
		return familyGroupingIcon
	case tn.IsIcon():
		return familyIbmIcon
	case tn.IsLine():
		return familyLine
	}
	return familyDoNotShow
}

// easier interface for the templates:
func (stl *templateStyles) IsFamily(tn TreeNodeInterface, tp tnFamily) bool {
	return stl.tnFamily(tn) == tp
}

// mini icons:
// some icons might have mini icons (ni and resIp). the rule is:
// if there are no vsi icon in the canvas, all the ni are displayed as vsi icon, and without mini icons
// if there is a vsi icon in the canvas, than:
// if the ni is connected to a vsi that has only one ni, than the ni displayed as vsi icon, with an ni mini icons
// if the ni is connected to a vsi that has more than one ni, than the ni displayed as ni icon, and without mini icons
// same with resIp and vpe

func (stl *templateStyles) HasMiniIcon(tn TreeNodeInterface) bool {
	return stl.canTypeHaveAMiniIcon[reflect.TypeOf(tn).Elem()] && tn.(IconTreeNodeInterface).hasMiniIcon()
}
func (stl *templateStyles) setCanTypeHaveAMiniIcon(nodes []TreeNodeInterface) {
	for _, tn := range nodes {
		if reflect.TypeOf(tn).Elem() == reflect.TypeOf(VsiTreeNode{}) {
			stl.canTypeHaveAMiniIcon[reflect.TypeOf(NITreeNode{})] = true
		}
		if reflect.TypeOf(tn).Elem() == reflect.TypeOf(VpeTreeNode{}) {
			stl.canTypeHaveAMiniIcon[reflect.TypeOf(ResIPTreeNode{})] = true
		}
		if reflect.TypeOf(tn).Elem() == reflect.TypeOf(LoadBalancerTreeNode{}) {
			stl.canTypeHaveAMiniIcon[reflect.TypeOf(PrivateIPTreeNode{})] = true
		}
	}
}

// ////////////////////////////////////////////////////////////////////////////////////////
func (stl *templateStyles) Image(tn TreeNodeInterface) string {
	if stl.canTypeHaveAMiniIcon[reflect.TypeOf(tn).Elem()] && !tn.(IconTreeNodeInterface).hasMiniIcon() {
		return miniImages[reflect.TypeOf(tn).Elem()]
	}
	return images[reflect.TypeOf(tn).Elem()]
}
func (stl *templateStyles) MiniImage(tn TreeNodeInterface) string {
	return miniImages[reflect.TypeOf(tn).Elem()]
}
func (stl *templateStyles) FIPImage() string {
	return fipImage
}
func (stl *templateStyles) Color(tn TreeNodeInterface) string {
	return colors[reflect.TypeOf(tn).Elem()]
}

////////////////////////////////////////////////////////////////////////

func (stl *templateStyles) DrawioLineStyle(tn TreeNodeInterface) string {
	line := tn.(LineTreeNodeInterface)
	startArrow, endArrow, color, dash := stl.lineParameters(line)
	dashStyle := ""
	if dash {
		dashStyle = "dashed=1;"
	}
	exitStyle := ""
	lineExitFormat := "exitX=%v;exitY=%v;exitDx=0;exitDy=0;"
	if srcConnectionPoint := line.SrcConnectionPoint(); srcConnectionPoint != 0 {
		x, y := lineConnectionPointToXY(srcConnectionPoint)
		exitStyle = fmt.Sprintf(lineExitFormat, x, y)
	}
	return fmt.Sprintf("startArrow=%s;endArrow=%s;strokeColor=%s;%s%s", startArrow, endArrow, color, exitStyle, dashStyle)
}

func (stl *templateStyles) SVGLineStyle(tn TreeNodeInterface) string {
	startArrow, endArrow, color, dash := stl.lineParameters(tn.(LineTreeNodeInterface))
	dashStyle := ""
	if dash {
		dashStyle = "stroke-dasharray='6 6'"
	}
	return fmt.Sprintf("marker-start='url(#%s_%s)' marker-end='url(#%s_%s)' stroke='%s' %s",
		color, startArrow, color, endArrow, colorCodes[color], dashStyle)
}

func (stl *templateStyles) SvgLineLabelPos(tn TreeNodeInterface) string {
	pos := stl.lineLabelPos(tn)
	return fmt.Sprintf("x=\"%d\" y=\"%d\"", pos.X, pos.Y)
}

func (stl *templateStyles) SvgLinePoints(tn TreeNodeInterface) string {
	points := lineAbsPoints(tn)
	pointsStr := fmt.Sprintf("M %d %d", points[0].X, points[0].Y)
	for _, point := range points[1:] {
		pointsStr += fmt.Sprintf(" L %d %d", point.X, point.Y)
	}
	return pointsStr
}

// ///////////////////////////////////////////////////////////////////////////
// lineParameters() check if the line should be dashed, blue, error...
func (stl *templateStyles) lineParameters(tn LineTreeNodeInterface) (start, end, color string, dash bool) {
	logical := reflect.TypeOf(tn).Elem() == reflect.TypeOf(LogicalLineTreeNode{})
	dash = logical
	if logical {
		color = blueColor
		start, end = ovalEndEdge, ovalEndEdge
	} else {
		color = blackColor
		con := tn.(*ConnectivityTreeNode)
		start, end = arrowEndEdge, arrowEndEdge
		if con.directed {
			start = ovalEndEdge
		}
		if con.Src().IsIcon() && con.Src().(IconTreeNodeInterface).IsGroupingPoint() && !con.Src().(*GroupPointTreeNode).hasShownSquare() {
			start = noneEndEdge
		}
		if con.Dst().IsIcon() && con.Dst().(IconTreeNodeInterface).IsGroupingPoint() && !con.Dst().(*GroupPointTreeNode).hasShownSquare() {
			end = noneEndEdge
		}
	}
	return start, end, color, dash
}

// lineLabelPos() calc the position of the label of a line, used for svg only.
// it put it in the middle of the longest interval of the line
func (stl *templateStyles) lineLabelPos(tn TreeNodeInterface) point {
	points := lineAbsPoints(tn)
	maxDistance := 0
	var pos point
	for i, to := range points[1:] {
		from := points[i]
		distance := (from.X-to.X)*(from.X-to.X) + (from.Y-to.Y)*(from.Y-to.Y)
		if distance > maxDistance {
			pos = point{(from.X + to.X) / 2, (from.Y + to.Y) / 2}
			maxDistance = distance
		}
	}
	return pos
}

// lineAbsPoints() calc the absolute point of a line // relevant for svg
func lineAbsPoints(tn TreeNodeInterface) []point {
	line := tn.(LineTreeNodeInterface)
	points := getLineAbsolutePoints(line)
	if line.Src() == line.Dst() && len(points) == 2 {
		// its a self loop, we make an ear in the left to the tn
		p := point{points[0].X + line.Src().Width()/2, points[0].Y - iconSize/2}
		points = []point{
			p,
			{p.X + iconSize, p.Y},
			{p.X + iconSize, p.Y + iconSize},
			{p.X, p.Y + iconSize},
		}
	} else {
		if srcConnectionPoint := line.SrcConnectionPoint(); srcConnectionPoint != 0 {
			x, y := lineConnectionPointToXY(srcConnectionPoint)
			points[0] = point{
				points[0].X + int(float64(line.Src().Width())*(x-0.5)),
				points[0].Y + int(float64(line.Src().Height())*(y-0.5))}
		} else {
			points[0] = calcConnectionPoint(line.Src(), points[0], points[1])
		}
		points[len(points)-1] = calcConnectionPoint(line.Dst(), points[len(points)-1], points[len(points)-2])
	}
	return points
}

// calcConnectionPoint() calculate the point that the line exit from the icon/square (or enter).
// it relevant for svg.
func calcConnectionPoint(tn TreeNodeInterface, center, out point) point {
	srcX, srcY := center.X, center.Y
	dstX, dstY := out.X, out.Y
	dx, dy := dstX-srcX, dstY-srcY
	srcWidth, srcHight := tn.Width(), tn.Height()

	switch {
	case dx > 0 && abs(srcHight*dx) >= abs(srcWidth*dy):
		return point{srcX + srcWidth/2, srcY + srcWidth*dy/dx/2}
	case dx < 0 && abs(srcHight*dx) >= abs(srcWidth*dy):
		return point{srcX - srcWidth/2, srcY - srcWidth*dy/dx/2}
	case dy > 0 && abs(srcHight*dx) <= abs(srcWidth*dy):
		return point{srcX + srcHight*dx/dy/2, srcY + srcHight/2}
	case dy < 0 && abs(srcHight*dx) <= abs(srcWidth*dy):
		return point{srcX - srcHight*dx/dy/2, srcY - srcHight/2}
	}
	return point{srcX, srcY}
}

//////////////////////////////////////////////////////////////////////////////////

//nolint:gomnd // lineConnectionPoint is numerated form 1 to 16
func lineConnectionPointToXY(connectionPoint lineConnectionPoint) (x, y float64) {
	//revive:disable // these are the numbers required by drawio

	switch connectionPoint {
	case 2, 3, 4, 5, 6:
		x = 1.0
	case 10, 11, 12, 13, 14:
		x = 0.0
	case 9, 15:
		x = 0.25
	case 8, 16:
		x = 0.5
	case 1, 7:
		x = 0.75
	}
	switch connectionPoint {
	case 14, 15, 16, 1, 2:
		y = 0.0
	case 6, 7, 8, 9, 10:
		y = 1.0
	case 3, 13:
		y = 0.25
	case 4, 12:
		y = 0.5
	case 5, 11:
		y = 0.75
	}
	return x, y
}
